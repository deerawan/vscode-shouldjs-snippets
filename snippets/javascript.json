{
  "containDeep": {
    "prefix": "shcd",
    "body": "$1.should.containDeep($2);",
    "description": "Should.js Assertion#containDeep. Deep object equality comparison."
  },
  "containDeepOrdered": {
    "prefix": "shcdo",
    "body": "$1.should.containDeepOrdered($2);",
    "description": "Should.js Assertion#containDeepOrdered. Assert that given object is contain equally structured object on the same depth level."
  },
  "containEql": {
    "prefix": "shceql",
    "body": "$1.should.containEql($2);",
    "description": "Should.js Assertion#containEql. Assert that given object contain something that equal to other."
  },
  "eql": {
    "prefix": "sheql",
    "body": "$1.should.be.eql($2);",
    "description": "Should.js Assertion#eql. Deep object equality comparison."
  },
  "eqlNot": {
    "prefix": "shnoteql",
    "body": "$1.should.not.be.eql($2);",
    "description": "Should.js Assertion#eql (NOT). Deep object equality comparison."
  },
  "equal": {
    "prefix": "shequal",
    "body": "$1.should.be.equal($2);",
    "description": "Should.js Assertion#equal. Exact comparison using ===."
  },
  "eqlOneOf": {
    "prefix": "shone",
    "body": "$1.should.be.oneOf($2)",
    "description": "Should.js Assertion#oneOf. Exact comparison using .eql to be one of supplied objects."
  },
  "equallOneOf": {
    "prefix": "shequalone",
    "body": "$1.should.be.equalOneOf($2)",
    "description": "Should.js Assertion#equalOneOf. Exact comparison using === to be one of supplied objects."
  },
  "exactly": {
    "prefix": "shex",
    "body": "$1.should.be.exactly($2);",
    "description": "Should.js Assertion#exactly. Aliases Assertion#equal."
  }
}